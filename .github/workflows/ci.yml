---
name: CI
on:
  schedule:
    - cron: '0 22 * * 0' # every sunday at 10pm
  push:
    branches:
      - 'master'
    tags:
      - 'v?[0-9]+.[0-9]+.[0-9]+*'
  pull_request:

jobs:

  test:
    name: Molecule
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        distro:
          - alpine-latest
          - alpine-edge
          - amazonlinux-latest
          - centos-latest
          - debian-latest
          - debian-unstable
          - fedora-latest
          - fedora-rawhide
          - opensuse-leap
          - opensuse-tumbleweed
          - redhat-latest
          - ubuntu-latest
          - ubuntu-devel
        ansible: [stable, devel]
        python-version: [3.8]
        experimental: [true]
        include:
          - {distro: alpine-latest, ansible: stable, python: 3.8, experimental: false}
          - {distro: amazonlinux-latest, ansible: stable, python: 3.8, experimental: false}
          - {distro: debian-latest, ansible: stable, python: 3.8, experimental: false}
          - {distro: fedora-latest, ansible: stable, python: 3.8, experimental: false}
          - {distro: opensuse-leap, ansible: stable, python: 3.8, experimental: false}
          - {distro: opensuse-tumbleweed, ansible: stable, python: 3.8, experimental: false}
          - {distro: redhat-latest, ansible: stable, python: 3.8, experimental: false}
          - {distro: ubuntu-latest, ansible: stable, python: 3.8, experimental: false}

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
      
      - name: Set environment variables
        id: prep
        run: |
          case "${{ matrix.distro }}" in
            alpine-latest)  DOCKER_IMAGE="alpine:latest";;
            alpine-edge)  DOCKER_IMAGE="alpine:edge";;
            amazonlinux-latest)  DOCKER_IMAGE="amazonlinux:latest";;
            centos-latest)  DOCKER_IMAGE="centos:latest";;
            debian-latest)  DOCKER_IMAGE="debian:latest";;
            debian-unstable)  DOCKER_IMAGE="debian:unstable";;
            fedora-latest)  DOCKER_IMAGE="fedora:latest";;
            fedora-rawhide)  DOCKER_IMAGE="fedora:rawhide";;
            opensuse-leap)  DOCKER_IMAGE="opensuse/leap:latest";;
            opensuse-tumbleweed)  DOCKER_IMAGE="opensuse/tumbleweed:latest";;
            redhat-latest)  DOCKER_IMAGE="registry.access.redhat.com/ubi8/ubi:latest";;
            ubuntu-latest)  DOCKER_IMAGE="ubuntu:latest";;
            ubuntu-devel)  DOCKER_IMAGE="ubuntu:devel";;
          esac
          echo ::set-output name=docker-image::${DOCKER_IMAGE}
          if [[ "${{ matrix.distro }}" == alpine* ]]; then
            DOCKER_COMMAND="sh -c 'while true ; do sleep 1 ; done'"
          fi
          echo ::set-output name=docker-command::${DOCKER_COMMAND:-}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python-version }}"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions

      - name: Test with molecule
        run: |
          tox
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          ANSIBLE: ${{ matrix.ansible }}
          GITHUB_PYTHON_VERSION: ${{ matrix.python-version }}
          TEST_DISTRO: ${{ matrix.distro }}
          TEST_DOCKER_IMAGE: ${{ steps.prep.outputs.docker-image }}
          TEST_DOCKER_COMMAND: ${{ steps.prep.outputs.docker-command }}