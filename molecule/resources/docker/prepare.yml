---
- name: Prepare
  hosts: all
  gather_facts: no
  become: yes

  tasks:
    - name: Include role rembik.bootstrap
      include_role:
        name: rembik.bootstrap

    - name: Update base ISO images cache
      shell: |
        set -Eeuo pipefail
        img_info_url=()
        img_base_url=()
        img_base_dir="{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') }}/.images/base"
        img_info_url[0]='http://mirror.centos.org/centos/8/isos/x86_64/CHECKSUM'
        img_info_url[1]='http://mirror.centos.org/centos/7/isos/x86_64/sha256sum.txt'
        img_base_url[0]='http://isoredirect.centos.org/centos/8/isos/x86_64'
        img_base_url[1]='http://isoredirect.centos.org/centos/7/isos/x86_64'
        img_type=('boot' 'NetInstall')
        img_file=()
        for ((i=0; i<2; i++)); do
          info="$(curl -s ${img_info_url[$i]} |
            grep -Eo ".*[a-z0-9]{64,}.*" |
            grep -Eo ".*${img_type[$i]}.*" )"
          file="$(echo "${info}" |
            sed -En 's/.*[^a-zA-Z0-9\._-]([a-zA-Z0-9\._-]+\.iso).*/\1/p')"
          check="$(echo "${info}" |
            sed -En 's/.*([a-z0-9]{64,}).*/\1/p')"
          url="${img_base_url[$i]}/${file}"
          if [ ! -f "${img_base_dir}/${file}" ]; then
            mkdir -p "${img_base_dir}"
            (cd "${img_base_dir}" && curl -LOsw "%{filename_effective} %{time_total}s\n" $url)
            (cd "${img_base_dir}" && echo "${check}  ${file}" | sha256sum -c --status)
          fi
          img_file[$i]="${file}"
        done
        img_files="${img_file[*]}"
        find "${img_base_dir}" -depth -mindepth 1 -maxdepth 1 \
          ! -regex "^.*/\(${img_files// /\\\|}\)$" \
          -exec rm -rf '{}' \;
      args:
        executable: /bin/bash
      register: kickstart_iso_base_images_cache
      changed_when: kickstart_iso_base_images_cache.stdout | length > 0
      ignore_errors: yes
      delegate_to: 127.0.0.1
